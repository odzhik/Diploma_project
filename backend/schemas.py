from datetime import datetime
from typing import Optional
from pydantic import BaseModel, EmailStr

# üîπ –í—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
class UserOut(BaseModel):
    id: int
    username: str
    email: EmailStr

    class Config:
        from_attributes = True

# üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserUpdate(BaseModel):
    username: str
    email: EmailStr

# üîπ –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è
class PasswordChange(BaseModel):
    old_password: str
    new_password: str


# –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserCreate(BaseModel):
    username: str
    email: str
    password: str

# –°—Ö–µ–º–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
class UserOut(BaseModel):
    id: int
    username: str
    email: str
    is_admin: bool

    class Config:
        from_attributes = True  # –ü–æ–∑–≤–æ–ª—è–µ—Ç Pydantic —Ä–∞–±–æ—Ç–∞—Ç—å —Å SQLAlchemy-–º–æ–¥–µ–ª—è–º–∏

# –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
class EventCreate(BaseModel):
    name: str
    description: Optional[str] = None
    location: str
    date: datetime
    price: int

# –°—Ö–µ–º–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
class EventOut(BaseModel):
    id: int
    name: str
    description: Optional[str]
    location: str
    date: datetime
    price: int

    class Config:
        from_attributes = True


# –°—Ö–µ–º–∞ –¥–ª—è —Ç–æ–∫–µ–Ω–∞
class Token(BaseModel):
    access_token: str
    token_type: str
class UserLogin(BaseModel):
    email: str
    password: str